/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.AddInfoClassController;
import Controller.CourseController;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.Class;
import Model.Schedule;
import Model.Student;

/**
 *
 * @author haibk
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    String classID;
    String showClassID;
    String showSubjectID;
    String showVersion;
    String showSemester;
    int selected = 0;
    int tab = 0;

    public MainForm() {
        initComponents();
        this.rbClass.setSelected(true);
        this.rb1.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcomboSemester = new javax.swing.JComboBox<>();
        tfclassID = new javax.swing.JTextField();
        tfsubjectID = new javax.swing.JTextField();
        btnGetData = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        rbClass = new javax.swing.JRadioButton();
        rbSchedule = new javax.swing.JRadioButton();
        rbListStudent = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGetData = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        comboVersion = new javax.swing.JComboBox<>();
        tfsearchClassID = new javax.swing.JTextField();
        tfsearchSubjectID = new javax.swing.JTextField();
        btnShowClass = new javax.swing.JButton();
        btnShowSubject = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        rb1 = new javax.swing.JRadioButton();
        rb2 = new javax.swing.JRadioButton();
        rb3 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbhShowInfo = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        cbSearchSemester = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PROJECT 2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
        );

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jPanel2.setBackground(new java.awt.Color(226, 229, 253));
        jPanel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Học kỳ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mã lớp học");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mã học phần");

        jcomboSemester.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jcomboSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20152", "20151" }));
        jcomboSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboSemesterActionPerformed(evt);
            }
        });

        tfclassID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tfsubjectID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnGetData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGetData.setText("Lấy dữ liệu");
        btnGetData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetDataActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Thông tin hiển thị:");

        buttonGroup1.add(rbClass);
        rbClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbClass.setText("Thông tin lớp học");
        rbClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbClassActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbSchedule);
        rbSchedule.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbSchedule.setText("Lịch học");
        rbSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbScheduleActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbListStudent);
        rbListStudent.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rbListStudent.setText("Danh sách sinh viên");
        rbListStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbListStudentActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Kết quả thu được");

        tblGetData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblGetData);

        jScrollPane1.setViewportView(jScrollPane2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcomboSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfclassID)
                            .addComponent(tfsubjectID, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                        .addGap(72, 72, 72)
                        .addComponent(btnGetData, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(158, 158, 158))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbListStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(rbSchedule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(rbClass, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                                .addGap(94, 94, 94))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnGetData, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcomboSemester, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(13, 13, 13)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfclassID, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tfsubjectID, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbClass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbListStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(31, 31, 31)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Lấy dữ liệu lớp học", jPanel2);

        jPanel3.setBackground(new java.awt.Color(226, 229, 253));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Phiên bản");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Mã lớp học");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Mã học phần");

        comboVersion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        comboVersion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3", "2", "1" }));

        tfsearchClassID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tfsearchSubjectID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnShowClass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnShowClass.setText("Hiển thị");
        btnShowClass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowClassActionPerformed(evt);
            }
        });

        btnShowSubject.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnShowSubject.setText("Hiển thị");
        btnShowSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowSubjectActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Thông tin hiển thị:");

        buttonGroup2.add(rb1);
        rb1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb1.setText("Thông tin lớp học");
        rb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(rb2);
        rb2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb2.setText("Lich học");
        rb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb2ActionPerformed(evt);
            }
        });

        buttonGroup2.add(rb3);
        rb3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb3.setText("Danh sách sinh viên");
        rb3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb3ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Bảng thông tin");

        tbhShowInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tbhShowInfo);

        jScrollPane3.setViewportView(jScrollPane4);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Học kỳ");

        cbSearchSemester.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbSearchSemester.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20152", "20151" }));
        cbSearchSemester.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSearchSemesterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(comboVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbSearchSemester, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(tfsearchClassID, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(tfsearchSubjectID, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnShowClass, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(btnShowSubject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(156, 156, 156)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(rb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(rb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(91, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(199, 199, 199))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbSearchSemester))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnShowClass, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(tfsearchClassID)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnShowSubject, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfsearchSubjectID)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(rb1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rb2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rb3)))
                .addGap(18, 18, 18)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Xem thông tin khóa học", jPanel3);

        jMenu1.setText("Thoát");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuItem1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem1.setText("Thoát");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Server");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jMenuItem2.setText("Chạy server");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void showClassList(ArrayList<Class> list) {
        int size = list.size();
        if (size > 0) {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("Mã lớp");
            table.addColumn("Mã môn học");
            table.addColumn("Tên lớp");
            table.addColumn("Ghi chú");
            table.addColumn("Loại lớp");
            table.addColumn("Trạng thái");
            table.addColumn("Max đăng ký");
            table.addColumn("Đã đăng ký");
            table.addColumn("Khoa");
            table.addColumn("Học kỳ");
            table.addColumn("Phiên bản");

            for (int i = 0; i < size; i++) {
                table.addRow(dataClass(list.get(i)));
            }
            if (tab == 1) {
                tblGetData.setModel(table);
            } else if (tab == 2) {
                tbhShowInfo.setModel(table);
            }
            this.validate();
        }
    }

    private static Object[] dataClass(Class classInfo) {

        Object[] data = {classInfo.getClassID(), classInfo.getSubjectID(), classInfo.getSubjectName(), classInfo.getNote(), classInfo.getClassType(),
            classInfo.getStatus(), classInfo.getMaxRegister(), classInfo.getNumRegister(), classInfo.getSchool(), classInfo.getSemester(), classInfo.getVersion()
        };
        return data;
    }

    public void showScheduleList(ArrayList<Schedule> list) {
        int size = list.size();
        if (size > 0) {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("Mã lớp");
            table.addColumn("Thời gian");
            table.addColumn("Tuần học");
            table.addColumn("Phòng học");

            for (int i = 0; i < size; i++) {
                table.addRow(dataSchedule(list.get(i)));
            }
            if (tab == 1) {
                tblGetData.setModel(table);
            } else if (tab == 2) {
                tbhShowInfo.setModel(table);
            }
            this.validate();
        } else {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("Mã lớp");
            table.addColumn("Thời gian");
            table.addColumn("Tuần học");
            table.addColumn("Phòng học");

            if (tab == 1) {
                tblGetData.setModel(table);
            } else if (tab == 2) {
                tbhShowInfo.setModel(table);
            }
            this.validate();
            JOptionPane.showMessageDialog(null, "Không có dữ liệu để hiển thị!");
        }
    }

    private static Object[] dataSchedule(Schedule schedule) {

        Object[] data = {schedule.getClassID(), schedule.getTime(), schedule.getWeek(), schedule.getRoom()};
        return data;
    }

    public void showStudentList(ArrayList<Student> list) {
        int size = list.size();
        if (size > 0) {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("Mã lớp");
            table.addColumn("Mã SV");
            table.addColumn("Họ tên");
            table.addColumn("Lớp");
            table.addColumn("TT đăng ký");
            table.addColumn("Phiên bản");

            for (int i = 0; i < size; i++) {
                table.addRow(dataStudent(list.get(i)));
            }
            if (tab == 1) {
                tblGetData.setModel(table);
            } else if (tab == 2) {
                tbhShowInfo.setModel(table);
            }
            this.validate();
        } else {
            DefaultTableModel table = new DefaultTableModel();
            table.addColumn("Mã lớp");
            table.addColumn("Mã SV");
            table.addColumn("Họ tên");
            table.addColumn("Lớp");
            table.addColumn("TT đăng ký");
            table.addColumn("Phiên bản");

            if (tab == 1) {
                tblGetData.setModel(table);
            } else if (tab == 2) {
                tbhShowInfo.setModel(table);
            }
            this.validate();

            JOptionPane.showMessageDialog(null, "Không có dữ liệu để hiển thị!");
        }
    }

    private static Object[] dataStudent(Student student) {

        Object[] data = {student.getClassID(), student.getStudentID(), student.getName(), student.getClassName(), student.getStatus(), student.getVersion()};
        return data;
    }

    private void jcomboSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcomboSemesterActionPerformed

    private void rbListStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbListStudentActionPerformed
        tab = 1;
        displayListStudentByClassID("3", classID);
    }//GEN-LAST:event_rbListStudentActionPerformed

    private void btnGetDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetDataActionPerformed
        tab = 1;
        getDataCourse();
    }//GEN-LAST:event_btnGetDataActionPerformed

    private void rbScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbScheduleActionPerformed
        tab = 1;
        displayListSchedule(classID);
    }//GEN-LAST:event_rbScheduleActionPerformed

    private void rbClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbClassActionPerformed
        tab = 1;
        displayListClass("3", classID);
    }//GEN-LAST:event_rbClassActionPerformed

    private void btnShowClassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowClassActionPerformed
        tab = 2;
        showInfoClass();
    }//GEN-LAST:event_btnShowClassActionPerformed

    private void rb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb1ActionPerformed
        tab = 2;
        if (selected == 1) {
            displayListClass(showVersion, showClassID);
        } else if (selected == 2) {
            displayListClassBySubjectID(showVersion, showSubjectID, showSemester);
        }
    }//GEN-LAST:event_rb1ActionPerformed

    private void rb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb2ActionPerformed
        tab = 2;
        if (selected == 1) {
            displayListSchedule(showClassID);
        } else if (selected == 2) {
            displayListScheduleBySubjectID(showSubjectID, showSemester);
        }
    }//GEN-LAST:event_rb2ActionPerformed

    private void rb3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb3ActionPerformed
        tab = 2;
        if (selected == 1) {
            displayListStudentByClassID(showVersion, showClassID);
        } else if (selected == 2) {
            displayListStudentBySubjectID(showVersion, showSubjectID, showSemester);
        }
    }//GEN-LAST:event_rb3ActionPerformed

    private void btnShowSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowSubjectActionPerformed
        tab = 2;
        showInfoSubject();
    }//GEN-LAST:event_btnShowSubjectActionPerformed

    private void cbSearchSemesterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSearchSemesterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSearchSemesterActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        new ServerForm(this).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    public void getDataCourse() {
        boolean check = true;

        if (check && tfclassID.getText().isEmpty()) {
            check = false;
            JOptionPane.showMessageDialog(null, "Bạn phải nhập mã lớp trước khi lấy dữ liệu!");
        }
        if (check && tfsubjectID.getText().isEmpty()) {
            check = false;
            JOptionPane.showMessageDialog(null, "Bạn phải nhập mã học phần trước khi lấy dữ liệu!");
        }

        if (check && (tfclassID.getText().length() > 6 || tfclassID.getText().length() < 5)) {
            check = false;
            JOptionPane.showMessageDialog(null, "Mã lớp học không hợp lệ!");
        }
        if (check && (tfsubjectID.getText().length() > 7 || tfsubjectID.getText().length() < 6)) {
            check = false;
            JOptionPane.showMessageDialog(null, "Mã học phần không hợp lệ!");
        }

        if (check) {
            String semester = (String) jcomboSemester.getSelectedItem();
            String classId = tfclassID.getText().toUpperCase();
            String subjectID = tfsubjectID.getText().toUpperCase();

            CourseController controller = new CourseController();
            if (controller.checkClassID(classId)) {
                JOptionPane.showMessageDialog(null, "Dữ liệu về lớp học này đã tồn tại!");
            } else {
                AddInfoClassController addController = new AddInfoClassController();

                try {
                    String srcHtml = addController.getContentHtml(classId);

                    if (srcHtml.contains("No data to display")) {
                        JOptionPane.showMessageDialog(null, "Không có dữ liệu!");
                    } else {

                        addController.addInfoClass(semester, classId, subjectID, srcHtml);
                        ArrayList<String> listSrcHtmlStudent = addController.getContenHtmlListStudent(semester, subjectID, classId);
                        if (!listSrcHtmlStudent.isEmpty()) {
                            System.out.println("1");
                            addController.addInfoStudent(classId, listSrcHtmlStudent);
                        }
                        classID = classId;
                        this.rbClass.setSelected(true);
                        displayListClass("3", classID);
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (Exception ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                }

            }

            this.tfclassID.setText("");
            this.tfsubjectID.setText("");
        }
    }

    public void displayListClass(String version, String classID) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Class> list = new ArrayList<>();
            Class c = controller.getClass(version, classID);
            if (c == null) {
                JOptionPane.showMessageDialog(null, "Không có dữ liệu để hiển thị!");
            } else {
                list.add(c);
                showClassList(list);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void displayListClassBySubjectID(String version, String subjectID, String semester) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Class> list = new ArrayList<>();
            list = controller.getListClass(version, subjectID, semester);
            if (list.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không có dữ liệu để hiển thị!");
            } else {
                showClassList(list);
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void displayListSchedule(String classID) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Schedule> list = controller.getScheduleClass(classID);
            showScheduleList(list);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void displayListScheduleBySubjectID(String subjectID, String semester) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Schedule> list = controller.getListScheduleBySubjectID(subjectID, semester);
            showScheduleList(list);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void displayListStudentByClassID(String version, String classID) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Student> list = controller.getListStudentByClassID(version, classID);
            showStudentList(list);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void displayListStudentBySubjectID(String version, String subjectID, String semester) {
        try {
            CourseController controller = new CourseController();
            ArrayList<Student> list = controller.getListStudentBySubjectID(version, subjectID, semester);
            showStudentList(list);
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void showInfoClass() {
        selected = 1;
        tfsearchSubjectID.setText("");
        boolean check = true;
        if (check && tfsearchClassID.getText().isEmpty()) {
            check = false;
            JOptionPane.showMessageDialog(null, "Bạn phải nhập mã lớp trước khi xem thông tin!");
        }
        if (check && (tfsearchClassID.getText().length() > 6 || tfsearchClassID.getText().length() < 5)) {
            check = false;
            JOptionPane.showMessageDialog(null, "Mã lớp học không hợp lệ");
        }

        if (check) {
            String version = (String) comboVersion.getSelectedItem();
            String classId = tfsearchClassID.getText().toUpperCase();

            this.rb1.setSelected(true);
            showClassID = classId;
            showVersion = version;
            displayListClass(version, classId);

        }

    }

    public void showInfoSubject() {
        selected = 2;
        tfsearchClassID.setText("");
        boolean check = true;
        if (check && tfsearchSubjectID.getText().isEmpty()) {
            check = false;
            JOptionPane.showMessageDialog(null, "Bạn phải nhập mã học phần trước khi xem thông tin!");
        }
        if (check && (tfsearchSubjectID.getText().length() > 7 || tfsearchSubjectID.getText().length() < 6)) {
            check = false;
            JOptionPane.showMessageDialog(null, "Mã học phần không hợp lệ");
        }

        if (check) {
            String version = (String) comboVersion.getSelectedItem();
            String semester = (String) cbSearchSemester.getSelectedItem();
            String subjectId = tfsearchSubjectID.getText().toUpperCase();
            this.rb1.setSelected(true);
            showSubjectID = subjectId;
            showVersion = version;
            showSemester = semester;
            displayListClassBySubjectID(version, subjectId, semester);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetData;
    private javax.swing.JButton btnShowClass;
    private javax.swing.JButton btnShowSubject;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbSearchSemester;
    private javax.swing.JComboBox<String> comboVersion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcomboSemester;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JRadioButton rb2;
    private javax.swing.JRadioButton rb3;
    private javax.swing.JRadioButton rbClass;
    private javax.swing.JRadioButton rbListStudent;
    private javax.swing.JRadioButton rbSchedule;
    private javax.swing.JTable tbhShowInfo;
    private javax.swing.JTable tblGetData;
    private javax.swing.JTextField tfclassID;
    private javax.swing.JTextField tfsearchClassID;
    private javax.swing.JTextField tfsearchSubjectID;
    private javax.swing.JTextField tfsubjectID;
    // End of variables declaration//GEN-END:variables
}
